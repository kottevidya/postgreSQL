name: Node.js CI and PGVector Setup

on:
  push:
    branches:
      - main
      - feature/pytest1

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgresql:
        image: ankane/pgvector:latest
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: testpwd
          POSTGRES_HOST_AUTH_METHOD: trust

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install psycopg

      - name: Setup PostgreSQL with PGVector
        uses: adepanges/postgresql-action@v1
        with:
          postgresql version: latest
          postgresql db: postgres
          postgresql user: postgres
          postgresql password: testpwd

      - name: Create PostgreSQL user and database
        run: |
          python create_db_user.py  # This runs your Python script to create the user and database
          
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Adjust this according to your Node.js version

      - name: Install Node.js dependencies
        run: npm install

      - name: Run tests with pytest
        run: |
          poetry install
          poetry run pytest --maxfail=1 --disable-warnings
        env:
          POSTGRES_HOST: localhost
          POSTGRES_DB: mydatabase  # Database created by the Python script
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_PORT: 5432
